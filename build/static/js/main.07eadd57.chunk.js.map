{"version":3,"sources":["Containers/DevContainer.js","components/DevDash.js","components/Header.js","components/ClientDash.js","index.js","components/logo.png"],"names":["React","require","server","Dev","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bugs","progress","event","index","preventDefault","axios","method","url","data","withCredentials","then","resp","console","log","catch","error","_this2","setState","_this3","createElement","map","bug","stage","Button","key","_id","bsStyle","onClick","ev","handleProgress","Component","DevDash","DevDash_React","DevContainer","history","Header","toggle","bind","assertThisInitialized","dropdownOpen","react_default","a","reactstrap_es","className","xs","isOpen","id","caret","divider","render","components_DevDash","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"mMAIIA,EAAQC,EAAQ,GAChBC,EAAS,gDAiFEC,cA9Eb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,KAAM,GACNC,SAAU,IAJKT,8EAQJU,EAAOC,GACpBD,EAAME,iBAgBNC,IAAM,CACJC,OAAQ,OACRC,IAAKlB,EAAS,iBACdmB,KAAM,CACJP,SAAUN,KAAKI,MAAME,UAEvBQ,iBAAiB,IAElBC,KAAK,SAACC,GACLC,QAAQC,IAAIF,EAAKH,QAElBM,MAAM,SAACC,GAAD,OAAWH,QAAQC,IAAIE,iDAGZ,IAAAC,EAAArB,KAElBU,IAAM,CACJC,OAAQ,MACRC,IAAKlB,EAAS,iBACdoB,iBAAiB,IAElBC,KAAK,SAACC,GACLC,QAAQC,IAAIF,EAAKH,KAAK,GAAGP,UACzBe,EAAKC,SAAS,CACZjB,KAAMW,EAAKH,SAGdM,MAAM,SAACC,GAAD,OAAWH,QAAQC,IAAIE,sCAGvB,IAAAG,EAAAvB,KAEP,OADAiB,QAAQC,IAAIlB,KAAKI,OAEfZ,EAAAgC,cAAA,WACEhC,EAAAgC,cAAA,aACEhC,EAAAgC,cAAA,UACEhC,EAAAgC,cAAA,kBACAhC,EAAAgC,cAAA,+BACAhC,EAAAgC,cAAA,uBAEDxB,KAAKI,MAAMC,KAAKoB,IAAI,SAACC,EAAKlB,GAAN,OACnBhB,EAAAgC,cAAA,UAEEhC,EAAAgC,cAAA,UAAKE,EAAIC,OACTnC,EAAAgC,cAAA,UAAIhC,EAAAgC,cAACI,EAAA,EAAD,CAAQC,IAAKH,EAAII,IAAKC,QAAQ,UAAUC,QAAS,SAACC,EAAIJ,GAAL,OAAaN,EAAKW,eAAeD,EAAIzB,KAAtF,yBAtEAhB,EAAM2C,WCNpB3C,EAAQC,EAAQ,GAoBL2C,mLATX,OACEC,EAAAb,cAAA,WACEa,EAAAb,cAAA,wBACAa,EAAAb,cAACc,EAAD,CAAKC,QAASvC,KAAKJ,MAAM2C,kBAXX/C,EAAM2C,kCC8CbK,cA3Cd,SAAAA,EAAY5C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACjB3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMJ,KAED6C,OAAS5C,EAAK4C,OAAOC,KAAZ5C,OAAA6C,EAAA,EAAA7C,QAAA6C,EAAA,EAAA7C,CAAAD,KACdA,EAAKO,MAAQ,CACXwC,cAAc,GALC/C,wEAUjBG,KAAKsB,SAAS,CACZsB,cAAe5C,KAAKI,MAAMwC,eAE5B3B,QAAQC,IAAI,2CAGb,OACC2B,EAAAC,EAAAtB,cAAA,cACCqB,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,KACCF,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,KAICF,EAAAC,EAAAtB,cAAA,MAAIwB,UAAU,QAAd,MAAwBH,EAAAC,EAAAtB,cAAA,WAAxB,UAEDqB,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,CAAKE,GAAG,KACPJ,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,CAAUG,OAAQlD,KAAKI,MAAMwC,aAAcH,OAAQzC,KAAKyC,OAAQU,GAAG,WAC9DN,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,CAAgBK,OAAK,GAArB,WAGAP,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,KACEF,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,gBACAF,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,CAAcM,SAAO,IACrBR,EAAAC,EAAAtB,cAACuB,EAAA,EAAD,iCAlCQvD,IAAM2C,WCOF3C,IAAM2C,UCH/BmB,iBACCT,EAAAC,EAAAtB,cAAC+B,EAAD,MACEC,SAASC,eAAe,kDCZ3BC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.07eadd57.chunk.js","sourcesContent":["import axios from 'axios';\n//import { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nvar React = require('react');\nvar server = \"http://students.engr.scu.edu/~eyale/bug-byte/\";\n\nclass Dev extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bugs: [],\n      progress: \"\"\n    };\n  }\n\n  handleProgress(event, index) {\n    event.preventDefault();\n\n    /*\n    var stateCopy = Object.assign({}, this.state);\n\n    if (stateCopy.bugs[index].stage === \"Not Started\") {\n      stateCopy.bugs[index].stage = \"In Progress\";\n    } else {\n      stateCopy.bugs[index].stage = \"Completed\";\n    }\n\n    this.setState({\n        bugs: stateCopy.bugs\n    });\n    */\n\n    axios({\n      method: 'post',\n      url: server + '/bugs/bugs.php',\n      data: {\n        progress: this.state.progress\n      },\n      withCredentials: true\n    })\n    .then((resp) => {\n      console.log(resp.data);\n    })\n    .catch((error) => console.log(error));\n  }\n\n  componentDidMount() {\n    //populate bugs field with bugs reported\n    axios({\n      method: 'get',\n      url: server + '/bugs/bugs.php',\n      withCredentials: true\n    })\n    .then((resp) => {\n      console.log(resp.data[0].progress);\n      this.setState({\n        bugs: resp.data\n      });\n    })\n    .catch((error) => console.log(error));\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <table>\n          <tr>\n            <th>Bugs</th>\n            <th>Progression Stage</th>\n            <th>Progress</th>\n          </tr>\n          {this.state.bugs.map((bug, index) =>\n            <tr>\n              {/*<th><div key={bug._id}><Link to={`/bugs/${bug._id}`}>{bug.title}</Link></div></th>*/}\n              <th>{bug.stage}</th>\n              <th><Button key={bug._id} bsStyle=\"success\" onClick={(ev, key) => this.handleProgress(ev, index)}>Progress</Button></th>\n            </tr>)\n          }\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Dev;\n","import Dev from \"../Containers/DevContainer\";\nvar React = require('react');\n\n\nclass DevDash extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n  }\n  */\n\n  render() {\n    return (\n      <div>\n        <div>Dashboard</div>\n        <Dev history={this.props.history}/>\n      </div>\n    );\n  }\n}\n\nexport default DevDash;\n","import React from 'react';\nimport logo from './logo.png'\nimport '../index.css'\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\n\nclass Header extends React.Component{\n\tconstructor(props) {\n\t  super(props);\n\n\t  this.toggle = this.toggle.bind(this);\n\t  this.state = {\n\t    dropdownOpen: false\n\t  };\n\t}\n\n\ttoggle() {\n\t  this.setState({\n\t    dropdownOpen: !this.state.dropdownOpen\n\t  });\n\t  console.log(\"toggle\")\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t{/*<Link to=\"/\">\n\t\t\t\t\t\t\t<img className=\"logo\" src={logo}/>\n\t\t\t\t\t\t</Link>*/}\n\t\t\t\t\t\t<h2 className=\"name\">Bug<br/>Byte </h2>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t<Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle} id=\"profile\">\n\t\t\t        <DropdownToggle caret>\n\t\t\t          Profile\n\t\t\t        </DropdownToggle>\n\t\t\t        <DropdownMenu>\n\t\t\t          <DropdownItem>Log Out</DropdownItem>\n\t\t\t          <DropdownItem divider />\n\t\t\t          <DropdownItem>Switch Users</DropdownItem>\n\t\t\t        </DropdownMenu>\n      \t\t\t</Dropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</header>\n\t\t)\n\t}\n}\n\nexport default Header\n","import React from 'react';\nimport Header from './Header';\nimport logo from './logo.png'\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, Jumbotron} from 'reactstrap';\nimport { Form, FormGroup, Label, Input} from 'reactstrap';\nimport {ListGroup, ListGroupItem} from 'reactstrap';\nimport {Card, CardBody, CardTitle, CardText, CardImg} from 'reactstrap';\n\n//TODO\n//[ ] verify posting to server works\n//[ ] load bugs associated with the user into cards\n\nclass ClientDash extends React.Component{\n\tconstructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  handleSubmit(event) {\n  \t//this.toggle()\n  \t//prevents the default action=\"\" from begin called, instead we handle \n  \t//the submit in this custom method\n  \tevent.preventDefault()\n\n  \t//create an obect which contains all the form data\n  \tconst data = new FormData(event.target)\n  \talert(data)\n\n  \t//post the FormData object to our backend\n  \tfetch('http://students.engr.scu.edu/~eyale/bug-byte/bugs/bugs.php', {\n  \t\tmethod: 'POST',\n  \t\tbody: data,\n  \t}).then(function(res){console.log(res)})\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm=\"12\" md={{ size: 1, offset: 5 }}>\n\t\t\t\t\t\t<Button color=\"danger\" size=\"lg\" id=\"reportBug\" onClick={this.toggle}>Report Bug</Button>{' '}\n\t\t\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n\t\t          <ModalHeader toggle={this.toggle}>Bug Report Form</ModalHeader>\n\t\t          <ModalBody>\n\t\t          \t<Form onSubmit={this.handleSubmit}>\n\t\t          \t\t<FormGroup>\n          \t\t\t\t\t<Label for=\"bugName\">Name of bug </Label>\n\t\t          \t\t\t<Input type=\"text\" id=\"bugName\" name=\"name\"/>\n\t\t          \t\t</FormGroup>\n\t\t          \t\t<FormGroup>\n\t\t          \t\t\t<Label for=\"bugType\">Type of bug </Label>\n\t\t          \t\t\t<Input type=\"select\" id=\"bugType\" name=\"type\">\n\t\t          \t\t\t\t<option>Syntax Error</option>\n\t\t          \t\t\t\t<option>Runtime Error</option>\n\t\t          \t\t\t\t<option>Logic Error</option>\n\t\t          \t\t\t\t<option>Other</option>\n\t\t          \t\t\t</Input>\n\t\t          \t\t</FormGroup>\n\t\t          \t\t<FormGroup>\n\t\t          \t\t\t<Label for=\"bugSeverity\"> Severity </Label>\n\t\t          \t\t\t<Input type=\"select\" id=\"bugSeverity\" name=\"severity\">\n\t\t          \t\t\t\t<option>Low</option>\n\t\t          \t\t\t\t<option>Medium</option>\n\t\t          \t\t\t\t<option>High</option>\n\t\t          \t\t\t</Input>\n\t\t          \t\t</FormGroup>\n\t\t          \t\t<FormGroup>\n\t\t          \t\t\t<Label for=\"bugDescription\">Description</Label>\n\t\t          \t\t\t<Input type=\"text\" id=\"bugDescription\" name=\"description\"/>\n\t\t          \t\t</FormGroup>\n\t\t          \t\t<FormGroup>\n\t\t          \t\t\t<Label>Program</Label>\n\t\t          \t\t\t<Input type=\"text\" id=\"bugProgram\" name=\"program\"/>\n\t\t          \t\t</FormGroup>\n\t\t          \t\t<FormGroup>\n\t\t          \t\t\t<Label for=\"bugBrowser\">Browser</Label>\n\t\t          \t\t\t<Input type=\"select\" id=\"bugBrowser\" name=\"browser\">\n\t\t          \t\t\t\t<option>Chrome</option>\n\t\t          \t\t\t\t<option>Safari</option>\n\t\t          \t\t\t\t<option>Edge</option>\n\t\t          \t\t\t\t<option>Opera</option>\n\t\t          \t\t\t</Input>\n\t\t          \t\t</FormGroup>\n\t\t          \t\t<Button type=\"submit\" color=\"primary\">Submit</Button>{' '}\n\t\t            \t<Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\t\n\t\t          \t</Form>\n\t\t          </ModalBody>\n\t\t        </Modal>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n\t\t\t\t\t\t<Jumbotron>\n\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t        <ListGroupItem>\n\t\t\t\t        \t<Card>\n\t\t\t\t\t\t        {//<CardImg top width=\"100%\" src={logo} alt=\"Card image cap\" />\n\t\t\t\t\t\t      \t\t}\n\t\t\t\t\t\t        <CardBody>\n\t\t\t\t\t\t          <CardTitle>Welcome!</CardTitle>\n\t\t\t\t\t\t          <CardText>You haven't submitted a bug yet. To get started, click the button above!</CardText>\n\t\t\t\t\t\t          <Button>Details</Button>\n\t\t\t\t\t\t        </CardBody>\n\t\t\t\t\t\t      </Card>\n\t\t\t\t        </ListGroupItem>\n\t\t\t\t        <ListGroupItem>Bug4</ListGroupItem>\n\t\t\t\t        <ListGroupItem>Bug3</ListGroupItem>\n\t\t\t\t        <ListGroupItem>Bug2</ListGroupItem>\n\t\t\t\t        <ListGroupItem>Bug1</ListGroupItem>\n\t\t\t\t      </ListGroup>\n\t\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t\t\n\t\t);\n\t}\n}\n\nexport default ClientDash\n","import React from 'react';\nimport { render }from 'react-dom';\nimport './index.css';\n//import {BrowserRouter} from 'react-router-dom';\n//import App from './components/App';\nimport DevDash from './components/DevDash';\nimport ClientDash from './components/ClientDash';\n\n//when index.js is served, the below render method is called\n//which selects the root element from index.html in ../public/\nrender((\n\t<DevDash />\n), document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.b2f62d0d.png\";"],"sourceRoot":""}